#region Prolog


#################################################################
## IBM Confidential
##
## OCO Source Materials
##
## BI and PM: pmpsvc
##
## (C) Copyright IBM Corp. 2008, 2009, 2010
##
## The source code for this program is not published or otherwise
## divested of its trade secrets, irrespective of what has been
## deposited with the U.S. Copyright Office.
#################################################################

#***
vVersionIndex = StringToNumber(pVersionIndex);
vApprovalIndex =StringToNumber(pApprovalIndex);
cIMRDCLSCube = '}tp_intermediate_RDCLS}' | pCube;
cAllApplications = 'all_applications';

#***Update StaticRights in Intermediate cell security cube
vFinalCellSecurity ='NONE';

IF (vVersionIndex >0);
	vTotalVersions = DIMSIZ(pVersionDim);
	vVersionLooper = 1;
	While (vVersionLooper <= vTotalVersions);
		vVersion = DIMNM(pVersionDim, vVersionLooper);
		IF (vApprovalIndex >0)	;	
			IF (pVersionFirst @= 'Y');
				vFinalCellSecurity=CellGetS(cIMRDCLSCube, vVersion, pApprovalNode,cAllApplications, pGroup,'Rights' );
				vCurrentCellSecurity = CellGetS(cIMRDCLSCube, vVersion, pApprovalNode,cAllApplications, pGroup,'StaticRights');
				IF (vFinalCellSecurity @<> vCurrentCellSecurity);
					CellPutS(vFinalCellSecurity, cIMRDCLSCube, vVersion, pApprovalNode,cAllApplications, pGroup,'StaticRights');
				Endif;
			Else;
				vFinalCellSecurity=CellGetS(cIMRDCLSCube, pApprovalNode, vVersion,cAllApplications, pGroup,'Rights' );
				vCurrentCellSecurity = CellGetS(cIMRDCLSCube, pApprovalNode, vVersion,cAllApplications, pGroup,'StaticRights');
				IF (vFinalCellSecurity @<> vCurrentCellSecurity);
					CellPutS(vFinalCellSecurity, cIMRDCLSCube, pApprovalNode, vVersion,cAllApplications, pGroup,'StaticRights');
				Endif;
			Endif;
		Else;
			vFinalCellSecurity=CellGetS(cIMRDCLSCube,vVersion, cAllApplications, pGroup,'Rights' );
			vCurrentCellSecurity = CellGetS(cIMRDCLSCube,vVersion, cAllApplications, pGroup,'StaticRights' );
			IF (vFinalCellSecurity @<>vCurrentCellSecurity);
				CellPutS(vFinalCellSecurity, cIMRDCLSCube,vVersion, cAllApplications, pGroup,'StaticRights');
			Endif;
		Endif;
		vVersionLooper = vVersionLooper +1;
	End;

ElseIf (vVersionIndex = 0 & vApprovalIndex >0);
	vFinalCellSecurity=CellGetS(cIMRDCLSCube,pApprovalNode, cAllApplications, pGroup,'Rights' );
	vCurrentCellSecurity = CellGetS(cIMRDCLSCube,pApprovalNode, cAllApplications, pGroup,'StaticRights');
	IF (vFinalCellSecurity @<>vCurrentCellSecurity);
		CellPutS(vFinalCellSecurity, cIMRDCLSCube,pApprovalNode, cAllApplications, pGroup,'StaticRights');
	Endif;
Endif;

#endregion